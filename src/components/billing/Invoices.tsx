import type { TableColumnsType } from 'antd';
import { Table, Tag } from 'antd';
import Image from 'next/image';
import React, { useEffect, useState } from 'react';

import { openWithBlank, useThrottleCallback } from '@/lib/utils';

import { useAppSelector } from '@/store/hooks';

import { getInvoices } from '@/api/requestMarket';
import { aelfscanAddress, CHAIN_ID } from '@/constant';

import { InvoicesItem } from '@/types/marketType';

export default function Invoices() {
  const orgUserAll = useAppSelector((state) => state.app.orgUserAll);
  const [invoiceList, setInvoiceList] = useState<InvoicesItem[]>([]);

  const getInvoicesList = useThrottleCallback(async () => {
    const { items } = await getInvoices({
      organizationId: orgUserAll?.id,
    });
    setInvoiceList(items);
  }, [orgUserAll?.id]);

  useEffect(() => {
    getInvoicesList();
  }, [getInvoicesList]);

  const columns: TableColumnsType = [
    {
      title: 'Invoice No.',
      dataIndex: 'BillingId',
      key: 'BillingId',
    },
    {
      title: 'Date Issued',
      dataIndex: 'BillingDate',
      key: 'BillingDate',
    },
    {
      title: 'Billing Period',
      dataIndex: 'BillingStartDate',
      key: 'BillingStartDate',
    },
    {
      title: 'Due Date',
      dataIndex: 'BillingEndDate',
      key: 'BillingEndDate',
    },
    {
      title: 'Amount',
      dataIndex: 'BillingAmount',
      key: 'BillingAmount',
      render: (text: number) => (
        <div>
          {text}
          <span className='ml-[4px] text-sm'>USDT</span>
        </div>
      ),
    },
    {
      title: 'Status',
      dataIndex: 'BillingStatus',
      key: 'BillingStatus',
      render: (text: number) => {
        return (
          <div>
            {text === 0 && <Tag color='#FF9900'>PendingPayment</Tag>}
            {text === 1 && <Tag color='green'>Paid</Tag>}
            {text === 2 && <Tag color='red'>PartiallyPaid</Tag>}
          </div>
        );
      },
    },
    {
      title: 'View',
      dataIndex: '',
      key: 'View',
      render: (_, record: InvoicesItem) => {
        return (
          <div
            className='text-blue-link cursor-pointer'
            onClick={() => {
              openWithBlank(
                `${aelfscanAddress}/${CHAIN_ID}/tx/${record?.BillingId}`
              );
            }}
          >
            Detail
          </div>
        );
      },
    },
  ];

  return (
    <div>
      {invoiceList.length === 0 && (
        <div className='flex flex-col items-center justify-center'>
          <Image
            src='/assets/svg/invoices.svg'
            alt='invoices'
            width={227}
            height={128}
            className='mt-[170px]'
          />
          <div className='text-dark-normal mb-[14px] mt-[45px] text-2xl font-medium'>
            No Invoices have been generated yet
          </div>
          <div className='text-gray-80'>
            Invoices will be created automatically based on the query fees
            generated by your API keys
          </div>
        </div>
      )}
      {invoiceList.length > 0 && (
        <div className='mt-[24px]'>
          <Table
            rowKey='BillingId'
            columns={columns}
            dataSource={invoiceList}
            className='w-full'
          />
        </div>
      )}
    </div>
  );
}
